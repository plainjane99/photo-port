{"version":3,"sources":["assets/large sync /^/.*/.jpg$","assets/large/commercial/0.jpg","assets/large/commercial/1.jpg","assets/large/commercial/2.jpg","assets/large/commercial/3.jpg","assets/large/commercial/4.jpg","assets/large/food/0.jpg","assets/large/food/1.jpg","assets/large/food/2.jpg","assets/large/food/3.jpg","assets/large/food/4.jpg","assets/large/landscape/0.jpg","assets/large/landscape/1.jpg","assets/large/landscape/2.jpg","assets/large/landscape/3.jpg","assets/large/landscape/4.jpg","assets/large/portraits/0.jpg","assets/large/portraits/1.jpg","assets/large/portraits/2.jpg","assets/large/portraits/3.jpg","assets/small sync /^/.*/.jpg$","assets/small/commercial/0.jpg","assets/small/commercial/1.jpg","assets/small/commercial/2.jpg","assets/small/commercial/3.jpg","assets/small/commercial/4.jpg","assets/small/food/0.jpg","assets/small/food/1.jpg","assets/small/food/2.jpg","assets/small/food/3.jpg","assets/small/food/4.jpg","assets/small/landscape/0.jpg","assets/small/landscape/1.jpg","assets/small/landscape/2.jpg","assets/small/landscape/3.jpg","assets/small/landscape/4.jpg","assets/small/portraits/0.jpg","assets/small/portraits/1.jpg","assets/small/portraits/2.jpg","assets/small/portraits/3.jpg","assets/cover/cover-image.jpg","components/About/index.js","utils/helpers.js","components/Nav/index.js","components/Modal/index.js","components/PhotoList/index.js","components/Gallery/index.js","components/Contact/index.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","About","className","src","coverImage","style","width","alt","capitalizeFirstLetter","string","charAt","toUpperCase","slice","Nav","props","categories","setCurrentCategory","currentCategory","contactSelected","setContactSelected","useEffect","document","title","name","data-testid","href","role","aria-label","onClick","category","Modal","onClose","currentPhoto","description","index","require","default","type","PhotoList","useState","currentPhotos","filter","photo","isModalOpen","setIsModalOpen","setCurrentPhoto","toggleModal","image","i","Gallery","ContactForm","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","target","isValid","test","String","toLowerCase","validateEmail","value","console","log","length","onSubmit","preventDefault","htmlFor","defaultValue","onBlur","rows","App","Contact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+IAAA,IAAIA,EAAM,CACT,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,oBAAqB,GACrB,oBAAqB,GACrB,oBAAqB,GACrB,oBAAqB,GACrB,oBAAqB,GACrB,oBAAqB,GACrB,oBAAqB,GACrB,oBAAqB,GACrB,oBAAqB,IAItB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,6BCxCpB,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,gBCAzC,IAAIH,EAAM,CACT,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,oBAAqB,GACrB,oBAAqB,GACrB,oBAAqB,GACrB,oBAAqB,GACrB,oBAAqB,GACrB,oBAAqB,GACrB,oBAAqB,GACrB,oBAAqB,GACrB,oBAAqB,IAItB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,6BCxCpB,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,6BCAzC,OAAe,cAA0B,+B,8FCA1B,G,MAAA,IAA0B,yCCe1BY,MATf,WACI,OACI,0BAASC,UAAU,OAAnB,UACI,oBAAIb,GAAG,QAAP,uBACA,qBAAKc,IAAKC,EAAYF,UAAU,OAAOG,MAAO,CAAEC,MAAO,QAAUC,IAAI,cCV1E,SAASC,EAAsBC,GACpC,OAAOA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,GC4ExCC,MAvEf,SAAaC,GAAO,MASZA,EALAC,kBAJY,MAIC,GAJD,EAKZC,EAIAF,EAJAE,mBACAC,EAGAH,EAHAG,gBACAC,EAEAJ,EAFAI,gBACAC,EACAL,EADAK,mBAeJ,OATAC,qBAAU,WACNC,SAASC,MAAQd,EAAsBS,EAAgBM,QACxD,CAACN,IAQA,yBAAQf,UAAU,gBAAlB,UACI,6BACI,oBAAGsB,cAAY,OAAOC,KAAK,IAA3B,UACI,sBAAMC,KAAK,MAAMC,aAAW,SAA5B,2BADJ,iBAIJ,8BACI,qBAAIzB,UAAU,WAAd,UACI,6BAGI,mBAAGsB,cAAY,QAAQC,KAAK,SAASG,QAAS,kBAAMT,GAAmB,IAAvE,wBAKJ,oBAAIjB,UAAS,eAAUgB,GAAmB,aAA1C,SAGI,sBAAMU,QAAS,kBAAMT,GAAmB,IAAxC,uBAGHJ,EAAW7B,KAAI,SAAC2C,GAAD,OAKZ,aAJA,CAIA,MACI3B,UAAS,eAAUe,EAAgBM,OAASM,EAASN,OAASL,GAAmB,aADrF,SAGI,sBACIU,QAAS,WACLZ,EAAmBa,GAEnBV,GAAmB,IAJ3B,SAOKX,EAAsBqB,EAASN,SAR/BM,EAASN,kB,OC/B3BO,EAxBD,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAGfT,EAAsCS,EAAtCT,KAAMM,EAAgCG,EAAhCH,SAAUI,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,MAEpC,OAEI,aADA,CACA,OAAKhC,UAAU,gBAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BqB,IAC5B,qBACIpB,IAAKgC,MAAQ,YAAsBN,EAAvB,YAAmCK,EAAnC,SAAgDE,QAC5D7B,IAAI,qBAER,4BAAI0B,IAEJ,wBAAQL,QAASG,EAASM,KAAK,SAA/B,oCCyIDC,EAvJG,SAAC,GAAkB,IAAhBT,EAAe,EAAfA,SAAe,EAEfU,mBAAS,CACtB,CACIhB,KAAM,gBACNM,SAAU,aACVI,YAAa,0EAEjB,CACIV,KAAM,gBACNM,SAAU,aACVI,YAAa,0EAEjB,CACIV,KAAM,oBACNM,SAAU,aACVI,YAAa,0EAEjB,CACIV,KAAM,mBACNM,SAAU,aACVI,YAAa,0EAEjB,CACIV,KAAM,gBACNM,SAAU,aACVI,YAAa,0EAEjB,CACIV,KAAM,iBACNM,SAAU,YACVI,YAAa,0EAEjB,CACIV,KAAM,eACNM,SAAU,YACVI,YAAa,0EAEjB,CACIV,KAAM,eACNM,SAAU,YACVI,YAAa,0EAEjB,CACIV,KAAM,YACNM,SAAU,YACVI,YAAa,0EAEjB,CACIV,KAAM,WACNM,SAAU,OACVI,YAAa,0EAEjB,CACIV,KAAM,UACNM,SAAU,OACVI,YAAa,0EAEjB,CACIV,KAAM,gBACNM,SAAU,OACVI,YAAa,0EAEjB,CACIV,KAAM,SACNM,SAAU,OACVI,YAAa,0EAEjB,CACIV,KAAM,aACNM,SAAU,OACVI,YAAa,0EAEjB,CACIV,KAAM,cACNM,SAAU,YACVI,YAAa,0EAEjB,CACIV,KAAM,QACNM,SAAU,YACVI,YAAa,0EAEjB,CACIV,KAAM,2BACNM,SAAU,YACVI,YAAa,0EAEjB,CACIV,KAAM,qBACNM,SAAU,YACVI,YAAa,0EAEjB,CACIV,KAAM,aACNM,SAAU,YACVI,YAAa,4EAQfO,EAxG0B,oBAwGHC,QAAO,SAACC,GAAD,OAAWA,EAAMb,WAAaA,KAxGlC,EA6GMU,oBAAS,GA7Gf,mBA6GzBI,EA7GyB,KA6GZC,EA7GY,OAiHQL,qBAjHR,mBAiHzBP,EAjHyB,KAiHXa,EAjHW,KAoH1BC,EAAc,SAACC,EAAOC,GAGxBH,EAAgB,2BAAIE,GAAL,IAAYb,MAAOc,KAElCJ,GAAgBD,IAGpB,OACI,gCAKKA,GAAgB,cAAC,EAAD,CAAOX,aAAcA,EAAcD,QAASe,IAE7D,qBAAK5C,UAAU,WAAf,SAGKsC,EAActD,KAAI,SAAC6D,EAAOC,GAAR,OACf,qBACI7C,IAAKgC,MAAQ,YAAsBN,EAAvB,YAAmCmB,EAAnC,SAA4CZ,QACxD7B,IAAKwC,EAAMxB,KACXrB,UAAU,qBAGV0B,QAAS,kBAAMkB,EAAYC,EAAOC,KAC7BD,EAAMxB,eCtIpB0B,MAXf,YAAuC,IAApBhC,EAAmB,EAAnBA,gBACPM,EAAsBN,EAAtBM,KAAMU,EAAgBhB,EAAhBgB,YACd,OACI,oCACI,oBAAIT,cAAY,QAAhB,SAAyBhB,EAAsBe,KAC/C,4BAAIU,IACJ,cAAC,EAAD,CAAWJ,SAAUZ,EAAgBM,W,OCgHlC2B,MArHf,WAAuB,MAKeX,mBAAS,CAAEhB,KAAM,GAAI4B,MAAO,GAAIC,QAAS,KALxD,mBAKZC,EALY,KAKDC,EALC,KASX/B,EAAyB8B,EAAzB9B,KAAM4B,EAAmBE,EAAnBF,MAAOC,EAAYC,EAAZD,QATF,EAYqBb,mBAAS,IAZ9B,mBAYZgB,EAZY,KAYEC,EAZF,KAiBnB,SAASC,EAAahE,GAIlB,GAAsB,UAAlBA,EAAEiE,OAAOnC,KAAkB,CAG3B,IAAMoC,ELzBX,SAAuBR,GAE5B,MADS,wJACCS,KAAKC,OAAOV,GAAOW,eKuBHC,CAActE,EAAEiE,OAAOM,OACvCC,QAAQC,IAAIP,GAMRH,EAJCG,EAIe,GAHA,+BAQflE,EAAEiE,OAAOM,MAAMG,OAGhBX,EAAgB,IAFhBA,EAAgB,GAAD,OAAI/D,EAAEiE,OAAOnC,KAAb,kBAavB+B,EAAa,2BAAKD,GAAN,kBAAkB5D,EAAEiE,OAAOnC,KAAO9B,EAAEiE,OAAOM,SAKlDT,GACDD,EAAa,2BAAKD,GAAN,kBAAkB5D,EAAEiE,OAAOnC,KAAO9B,EAAEiE,OAAOM,SAqB/D,OACI,oCACI,oBAAIxC,cAAY,QAAhB,wBAEA,uBAAMnC,GAAG,eAAe+E,SAfhC,SAAsB3E,GAClBA,EAAE4E,iBACFJ,QAAQC,IAAIb,IAaR,UAII,gCACI,uBAAOiB,QAAQ,OAAf,mBACA,uBAAOjC,KAAK,OAAOd,KAAK,OAAOgD,aAAchD,EAAMiD,OAAQf,OAI/D,gCACI,uBAAOa,QAAQ,QAAf,4BACA,uBAAOjC,KAAK,QAAQd,KAAK,QAAQgD,aAAcpB,EAAOqB,OAAQf,OAIlE,gCACI,uBAAOa,QAAQ,UAAf,sBACA,0BAAU/C,KAAK,UAAUkD,KAAK,IAAIF,aAAcnB,EAASoB,OAAQf,OAIpEF,GACG,8BACI,mBAAGrD,UAAU,aAAb,SAA2BqD,MAKnC,wBAAQ/B,cAAY,YAAYa,KAAK,SAArC,2BCvCDqC,MA3Df,WAAe,MAKiCnC,oBAAS,GAL1C,mBAKNrB,EALM,KAKWC,EALX,OAOQoB,mBAAS,CAC5B,CACEhB,KAAM,aACNU,YACE,wEAEJ,CACEV,KAAM,YACNU,YAAa,kCAEf,CACEV,KAAM,OACNU,YAAa,wBAEf,CACEV,KAAM,YACNU,YAAa,8DAhBVlB,EAPM,sBA2BiCwB,mBAASxB,EAAW,IA3BrD,mBA2BNE,EA3BM,KA2BWD,EA3BX,KA6Bb,OACE,gCACE,cAAC,EAAD,CACED,WAAYA,EACZC,mBAAoBA,EACpBC,gBAAiBA,EAIjBC,gBAAiBA,EACjBC,mBAAoBA,IAEtB,+BACE,8BAGID,EAOE,cAACyD,EAAD,IALF,qCACE,cAAC,EAAD,CAAS1D,gBAAiBA,IAC1B,cAAC,EAAD,eCtDC2D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCOdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlE,SAASmE,eAAe,SAO1BZ,M","file":"static/js/main.0c1c95e0.chunk.js","sourcesContent":["var map = {\n\t\"./commercial/0.jpg\": 15,\n\t\"./commercial/1.jpg\": 16,\n\t\"./commercial/2.jpg\": 17,\n\t\"./commercial/3.jpg\": 18,\n\t\"./commercial/4.jpg\": 19,\n\t\"./food/0.jpg\": 20,\n\t\"./food/1.jpg\": 21,\n\t\"./food/2.jpg\": 22,\n\t\"./food/3.jpg\": 23,\n\t\"./food/4.jpg\": 24,\n\t\"./landscape/0.jpg\": 25,\n\t\"./landscape/1.jpg\": 26,\n\t\"./landscape/2.jpg\": 27,\n\t\"./landscape/3.jpg\": 28,\n\t\"./landscape/4.jpg\": 29,\n\t\"./portraits/0.jpg\": 30,\n\t\"./portraits/1.jpg\": 31,\n\t\"./portraits/2.jpg\": 32,\n\t\"./portraits/3.jpg\": 33\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 14;","export default __webpack_public_path__ + \"static/media/0.6ba0a0b4.jpg\";","export default __webpack_public_path__ + \"static/media/1.86164d25.jpg\";","export default __webpack_public_path__ + \"static/media/2.83c111b0.jpg\";","export default __webpack_public_path__ + \"static/media/3.070e6fe5.jpg\";","export default __webpack_public_path__ + \"static/media/4.ed3b1a69.jpg\";","export default __webpack_public_path__ + \"static/media/0.8877b785.jpg\";","export default __webpack_public_path__ + \"static/media/1.e8b41d95.jpg\";","export default __webpack_public_path__ + \"static/media/2.a2aa7476.jpg\";","export default __webpack_public_path__ + \"static/media/3.5be68227.jpg\";","export default __webpack_public_path__ + \"static/media/4.444be598.jpg\";","export default __webpack_public_path__ + \"static/media/0.07e46859.jpg\";","export default __webpack_public_path__ + \"static/media/1.ffe481f4.jpg\";","export default __webpack_public_path__ + \"static/media/2.ce01b098.jpg\";","export default __webpack_public_path__ + \"static/media/3.c095b24c.jpg\";","export default __webpack_public_path__ + \"static/media/4.3aa93bf4.jpg\";","export default __webpack_public_path__ + \"static/media/0.3af9e960.jpg\";","export default __webpack_public_path__ + \"static/media/1.5fd176a1.jpg\";","export default __webpack_public_path__ + \"static/media/2.2a91734e.jpg\";","export default __webpack_public_path__ + \"static/media/3.47735072.jpg\";","var map = {\n\t\"./commercial/0.jpg\": 35,\n\t\"./commercial/1.jpg\": 36,\n\t\"./commercial/2.jpg\": 37,\n\t\"./commercial/3.jpg\": 38,\n\t\"./commercial/4.jpg\": 39,\n\t\"./food/0.jpg\": 40,\n\t\"./food/1.jpg\": 41,\n\t\"./food/2.jpg\": 42,\n\t\"./food/3.jpg\": 43,\n\t\"./food/4.jpg\": 44,\n\t\"./landscape/0.jpg\": 45,\n\t\"./landscape/1.jpg\": 46,\n\t\"./landscape/2.jpg\": 47,\n\t\"./landscape/3.jpg\": 48,\n\t\"./landscape/4.jpg\": 49,\n\t\"./portraits/0.jpg\": 50,\n\t\"./portraits/1.jpg\": 51,\n\t\"./portraits/2.jpg\": 52,\n\t\"./portraits/3.jpg\": 53\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 34;","export default __webpack_public_path__ + \"static/media/0.943044a7.jpg\";","export default __webpack_public_path__ + \"static/media/1.296bd358.jpg\";","export default __webpack_public_path__ + \"static/media/2.da4d6061.jpg\";","export default __webpack_public_path__ + \"static/media/3.2ada38ae.jpg\";","export default __webpack_public_path__ + \"static/media/4.3b0c40e1.jpg\";","export default __webpack_public_path__ + \"static/media/0.b18c130d.jpg\";","export default __webpack_public_path__ + \"static/media/1.863e6935.jpg\";","export default __webpack_public_path__ + \"static/media/2.011ffdeb.jpg\";","export default __webpack_public_path__ + \"static/media/3.ace5bb9b.jpg\";","export default __webpack_public_path__ + \"static/media/4.7303bd38.jpg\";","export default __webpack_public_path__ + \"static/media/0.7e6f7d5d.jpg\";","export default __webpack_public_path__ + \"static/media/1.156d2772.jpg\";","export default __webpack_public_path__ + \"static/media/2.01f0c354.jpg\";","export default __webpack_public_path__ + \"static/media/3.86c62954.jpg\";","export default __webpack_public_path__ + \"static/media/4.b4929673.jpg\";","export default __webpack_public_path__ + \"static/media/0.aae354cf.jpg\";","export default __webpack_public_path__ + \"static/media/1.63c4a51d.jpg\";","export default __webpack_public_path__ + \"static/media/2.73361bef.jpg\";","export default __webpack_public_path__ + \"static/media/3.dd376ef9.jpg\";","export default __webpack_public_path__ + \"static/media/cover-image.533ae8f6.jpg\";","import React from 'react';\nimport coverImage from \"../../assets/cover/cover-image.jpg\";\n\n// React components must always return a single parent JSX element.\n// However, this element may have many children elements\n// For example, we cannot have another element outside and at the same level as <section>\nfunction About() {\n    return(\n        <section className=\"my-5\">\n            <h1 id=\"about\">Who am I?</h1>\n            <img src={coverImage} className=\"my-2\" style={{ width: \"100%\" }} alt=\"cover\" />\n        </section>\n    );\n}\n\nexport default About;","export function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}","import React, { useEffect } from 'react';\nimport { capitalizeFirstLetter } from \"../../utils/helpers\";\n\n// React components must always return a single parent JSX element.\n// However, this element may have many children elements\n// For example, we cannot have another element outside and at the same level as <section>\nfunction Nav(props) {\n\n    // deconstruct functions from props\n    const {\n        categories = [],\n        setCurrentCategory,\n        currentCategory,\n        contactSelected,\n        setContactSelected\n    } = props;\n\n    // the first argument is the callback function, \n    // the second argument is an array with a single element, currentCategory. \n    // The second argument directs the hook to re-render the component on changes to the value of this state\n    useEffect(() => {\n        document.title = capitalizeFirstLetter(currentCategory.name);\n    }, [currentCategory]);\n\n    // map() over the 'categories' array\n    // in JSX, we need to give each element in the array a unique key attribute\n    // in our case, we used category to state key=category.name\n    // the parantheses returns back a single JSX element \n    // we also add an event listener since we'll want to use the links we put into the nav\n    return (\n        <header className=\"flex-row px-1\">\n            <h2>\n                <a data-testid=\"link\" href=\"/\">\n                    <span role=\"img\" aria-label=\"camera\"> 📸</span> Oh Snap!\n                </a>\n            </h2>\n            <nav>\n                <ul className=\"flex-row\">\n                    <li>\n                        {/* add click handler to set the value of contactSelected based on the user's selection */}\n                        {/* set Contact Selected to false when 'about' is selected */}\n                        <a data-testid=\"about\" href=\"#about\" onClick={() => setContactSelected(false)}>\n                            About me\n                        </a>\n                    </li>\n                    {/* If contactSelected is true, add the CSS class navActive, which will illuminate the background */}\n                    <li className={`mx-2 ${contactSelected && 'navActive'}`}>\n                        {/* add click handler to set the value of contactSelected based on the user's selection */}\n                        {/* set Contact Selected to true when 'contact' is selected */}\n                        <span onClick={() => setContactSelected(true)}>Contact</span>\n                    </li>\n\n                    {categories.map((category) => (\n                        // short-circuit expression\n                        // currentCategory.name === category.name will get evaluated, \n                        // and as long as it is true, then the second bit of the short circuit, navActive, will be returned\n                        // chain && operator so that the 'navActive' class value will only be assigned to the current category\n                        <li\n                            className={`mx-1 ${currentCategory.name === category.name && !contactSelected && 'navActive'}`}\n                            key={category.name}>\n                            <span\n                                onClick={() => {\n                                    setCurrentCategory(category);\n                                    // set ContactSelected to false for gallery\n                                    setContactSelected(false);\n                                }}\n                            >\n                                {capitalizeFirstLetter(category.name)}\n                            </span>\n                        </li>\n                    ))}\n                </ul>\n            </nav>\n        </header>\n    );\n}\n\nexport default Nav;","import React from 'react';\n\n// this modal will be activated by clicking a photo through PhotoList\n// destructure props into onClose and currentPhoto for use as a parameter\nconst Modal = ({ onClose, currentPhoto }) => {\n\n    // destructure currentPhoto properties into constants to assign their values into the modal\n    const {name, category, description, index} = currentPhoto;\n\n    return (\n        // create a basic modal with a backdrop and container\n        <div className=\"modalBackdrop\">\n            <div className=\"modalContainer\">\n                <h3 className=\"modalTitle\">{name}</h3>\n                <img \n                    src={require(`../../assets/large/${category}/${index}.jpg`).default}\n                    alt=\"current category\"\n                />\n                <p>{description}</p>\n                {/* assign onClose to event listener */}\n                <button onClick={onClose} type=\"button\">\n                    Close this modal\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default Modal;","// For the sake of modularity, break out the logic for the images themselves into a PhotoList component\n// This will be a child component of the Gallery component that will now handle the photo rendering logic\n\nimport React, { useState } from 'react';\nimport Modal from '../Modal';\n\nconst PhotoList = ({ category }) => {\n\n    const [photos] = useState([\n        {\n            name: 'Grocery aisle',\n            category: 'commercial',\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\n        },\n        {\n            name: 'Grocery booth',\n            category: 'commercial',\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\n        },\n        {\n            name: 'Building exterior',\n            category: 'commercial',\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\n        },\n        {\n            name: 'Restaurant table',\n            category: 'commercial',\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\n        },\n        {\n            name: 'Cafe interior',\n            category: 'commercial',\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\n        },\n        {\n            name: 'Cat green eyes',\n            category: 'portraits',\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\n        },\n        {\n            name: 'Green parrot',\n            category: 'portraits',\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\n        },\n        {\n            name: 'Yellow macaw',\n            category: 'portraits',\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\n        },\n        {\n            name: 'Pug smile',\n            category: 'portraits',\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\n        },\n        {\n            name: 'Pancakes',\n            category: 'food',\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\n        },\n        {\n            name: 'Burrito',\n            category: 'food',\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\n        },\n        {\n            name: 'Scallop pasta',\n            category: 'food',\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\n        },\n        {\n            name: 'Burger',\n            category: 'food',\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\n        },\n        {\n            name: 'Fruit bowl',\n            category: 'food',\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\n        },\n        {\n            name: 'Green river',\n            category: 'landscape',\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\n        },\n        {\n            name: 'Docks',\n            category: 'landscape',\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\n        },\n        {\n            name: 'Panoramic village by sea',\n            category: 'landscape',\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\n        },\n        {\n            name: 'Domestic landscape',\n            category: 'landscape',\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\n        },\n        {\n            name: 'Park bench',\n            category: 'landscape',\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\n        },\n    ]);\n\n    // go through each photo in the photos array, \n    // trying to find every photo that matches the category that was selected by the user\n    // If a photo matches the condition, it is returned in an array and assigned to currentPhotos\n    // Then map the currentPhotos array to render each photo that matches the category selected by the user\n    const currentPhotos = photos.filter((photo) => photo.category === category);\n\n    // we only want the modal to open when a user has clicked an image\n    // so conditionally render the modal based on whether an image has been clicked\n    // this hook manages whether the modal is open or not, with an initial state of false\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    // use the useState Hook in the PhotoList component to manage the current photo state and\n    // make this data accessible to the Modal component through props\n    const [currentPhoto, setCurrentPhoto] = useState();\n\n    // define our function to open the modal when a user has clicked on an image\n    const toggleModal = (image, i) => {\n        // current photo\n        // use the spread operator to add the index: i key value pair to the current photo state\n        setCurrentPhoto({...image, index: i});\n        // updates the isModalOpen value to false but i don't understand why??????????????????????\n        setIsModalOpen(!isModalOpen);\n    }\n\n    return (\n        <div>\n            {/* modal activated here */}\n            {/* pass in currentPhoto as a prop to the modal  */}\n            {/* only render the modal if the isModalOpen value is true */}\n            {/* pass toggleModal down as a prop to Modal, allowing us to toggle the state of the modal*/}\n            {isModalOpen && (<Modal currentPhoto={currentPhoto} onClose={toggleModal} />)}\n\n            <div className=\"flex-row\">\n                {/* image object represents the element in the photos array\n                'i' is the index in the path file structure where we pull/section the image */}\n                {currentPhotos.map((image, i) => (\n                    <img\n                        src={require(`../../assets/small/${category}/${i}.jpg`).default}\n                        alt={image.name}\n                        className=\"img-thumbnail mx-1\"\n                        // event handler function to capture the individual photo data for the modal\n                        // passed in the current image and i as arguments to our toggleModal function\n                        onClick={() => toggleModal(image, i)}\n                        key={image.name}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default PhotoList;","import React from 'react';\nimport { capitalizeFirstLetter } from '../../utils/helpers';\nimport PhotoList from '../PhotoList';\n\nfunction Gallery({ currentCategory }) {\n    const { name, description } = currentCategory;\n    return (\n        <section>\n            <h1 data-testid=\"h1tag\">{capitalizeFirstLetter(name)}</h1>\n            <p>{description}</p>\n            <PhotoList category={currentCategory.name} />\n        </section>\n    );\n}\n\nexport default Gallery;","import React, { useState } from 'react';\n\n// validate email format\nimport { validateEmail } from '../../utils/helpers';\n\nfunction ContactForm() {\n\n    // the Hook that'll manage the form data\n    // A feature of this Hook is the ability to initialize the values of the state\n    // we want to clear the input fields on the component loading so set the initial state to empty strings\n    const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n\n    // destructure the formState object into its named properties, name, email, and message\n    // each property is added to the defaultValue attribute to each of the three form elements that'll handle form data. \n    const { name, email, message } = formState;\n\n    // define the error message that may occur for input validation\n    const [errorMessage, setErrorMessage] = useState('');\n\n    // sync the state\n    // function that will sync the state of the component formState with the user input\n    // onChange event listener will ensure that the handleChange function fires whenever a keystroke is typed into the input field for name\n    function handleChange(e) {\n\n        // validate email before syncing the form data with the state, formState\n        // target the email <input> element, i.e. if the input is 'email' then validate it\n        if (e.target.name === 'email') {\n            // validate the value of the email input field by using the validateEmail function\n            // which returns a Boolean: true if valid and false if invalid\n            const isValid = validateEmail(e.target.value);\n            console.log(isValid);\n            // isValid conditional statement\n            if (!isValid) {\n                setErrorMessage('Your email is invalid.');\n            } else {\n                // empty string means no errror\n                setErrorMessage('');\n            }\n        }\n        // handle the message and name form elements.  fields cannot be blank.\n        else {\n            if (!e.target.value.length) {\n                setErrorMessage(`${e.target.name} is required.`);\n            } else {\n                setErrorMessage('');\n            }\n        }\n\n        // setFormState function updates the formState value for the name property\n        // assign the value taken from the input field in the UI with e.target.value\n        // and assign this value to the property formState.name\n        // use the spread operator, ...formState, so we can retain the other key-value pairs in this object\n        // The name property of target refers to the name attribute of the form element\n        // This attribute value matches the property names of formState (name, email, and message)\n        // and allows us to use [ ] to create dynamic property names\n        setFormState({ ...formState, [e.target.name]: e.target.value })\n\n        // use this to log the error message\n        // console.log('errorMessage', errorMessage);\n\n        if (!errorMessage) {\n            setFormState({ ...formState, [e.target.name]: e.target.value });\n        }\n    }\n\n    // console.log goes outside of the handleChange function\n    // because the asynchronous nature of the setFormState function will cause the console.log placed in the function body of handleChange to appear delayed in its ability to sync\n    // console.log(formState);\n\n    // prevent the default action of the form Submit button\n    // and then log the formState object on the Submit button click since we do not have a backend\n    function handleSubmit(e) {\n        e.preventDefault();\n        console.log(formState);\n    }\n\n    // create the DOM elements in the contact form\n    // create a form with three inputs (name, email, and message)\n    // forms have an internal state so leverage the useState Hook to maintain the form data with state\n    // When form data is maintained by the state of the component, \n    // we call it a controlled component\n    // a controlled component allows the data to be validated or manipulated using JavaScript, offering better control over the data\n    return (\n        <section>\n            <h1 data-testid=\"h1tag\">Contact me</h1>\n            {/* add event handler onSubmit at form level to call handleSubmit function */}\n            <form id=\"contact-form\" onSubmit={handleSubmit}>\n                {/* name input */}\n                {/* Due to keywords reserved in JavaScript, \n                'for' attribute in the <label> element needs to be 'htmlFor' */}\n                <div>\n                    <label htmlFor=\"name\">Name:</label>\n                    <input type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange} />\n                </div>\n\n                {/* email input */}\n                <div>\n                    <label htmlFor=\"email\">Email address:</label>\n                    <input type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange} />\n                </div>\n\n                {/* message text area */}\n                <div>\n                    <label htmlFor=\"message\">Message:</label>\n                    <textarea name=\"message\" rows=\"5\" defaultValue={message} onBlur={handleChange} />\n                </div>\n\n                {/* render this if there is an error */}\n                {errorMessage && (\n                    <div>\n                        <p className=\"error-text\">{errorMessage}</p>\n                    </div>\n                )}\n\n                {/* add the button*/}\n                <button data-testid=\"buttontag\" type=\"submit\">Submit</button>\n\n            </form>\n        </section>\n    )\n}\n\nexport default ContactForm;","// this file is the center of the application, the root component that houses all other components\n\n// added this without instruction to match 20.1.5\nimport React, { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Nav from './components/Nav';\nimport Gallery from './components/Gallery';\nimport ContactForm from './components/Contact';\n\n// this function returns html represented by JSX, Javascript XML\n// think of this like document.createElement(JSX)\n\n// instead of hardcoding all nav categories, we'll define the categories in an array\n// of objects that contain each category's name and a short description. \n// use the useState hook here so we can have the option to change the categories at some point in the future\n\nfunction App() {\n\n  // condition if Contact form renders based on which menu item the user selects from the navigation bar\n  // set the initial value of contactSelected to false to prevent the contact form from showing when a user initially navigates to the homepage\n  // value of true would render the Contact Form\n  const [contactSelected, setContactSelected] = useState(false);\n\n  const [categories] = useState([\n    {\n      name: \"commercial\",\n      description:\n        \"Photos of grocery stores, food trucks, and other commercial projects\"\n    },\n    {\n      name: \"portraits\",\n      description: \"Portraits of people in my life\"\n    },\n    {\n      name: \"food\",\n      description: \"Delicious delicacies\"\n    },\n    {\n      name: \"landscape\",\n      description: \"Fields, farmhouses, waterfalls, and the beauty of nature\",\n    },\n  ]);\n\n  const [currentCategory, setCurrentCategory] = useState(categories[0]);\n\n  return (\n    <div>\n      <Nav\n        categories={categories}\n        setCurrentCategory={setCurrentCategory}\n        currentCategory={currentCategory}\n        // Pass the getter and setter functions into the Nav component \n        // to allow this component to modify the state in the App component\n        // which will conditionally render based on the user's selection\n        contactSelected={contactSelected}\n        setContactSelected={setContactSelected}\n      ></Nav>\n      <main>\n        <div>\n          {/* if conditional to render gallery vs contact form */}\n          {/* this conditional uses ternary operator, identified with ? and : */}\n          {!contactSelected ? (\n            // the <> and </> are react fragments to allow multiple elements to be grouped together\n            <>\n              <Gallery currentCategory={currentCategory}></Gallery>\n              <About></About>\n            </>\n          ) : (\n              <ContactForm></ContactForm>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// this file is the main entry point for the application\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// commented this without instruction\nimport reportWebVitals from './reportWebVitals';\n\n// added this without instruction\n// import * as serviceWorker from './serviceWorker';\n\n// The ReactDOM library is rendering the App component at the root element in the HTML.\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// commented this without instruction\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// added this without instruction\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();"],"sourceRoot":""}